#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// dt-formatter: indent = "  "
// dt-formatter: multilineIntegerCellsIndent = "reindent"
// dt-formatter: multilineListCommaStyle = "leading"

&sk { /delete-property/ ignore-modifiers; };

/ {
  combos {
    compatible = "zmk,combos";

    tab {
      key-positions = <2 3>;
      bindings = <&kp TAB>;
    };

    ctrl {
      key-positions = <26 27>;
      bindings = <&kp LCTRL>;
    };

    cmd {
      key-positions = <37 38>;
      bindings = <&kp LCMD>;
    };

    alt {
      key-positions = <39 40>;
      bindings = <&kp LEFT_ALT>;
    };

    shift {
      key-positions = <8 9>;
      bindings = <&kp LSHIFT>;
    };

    caps_word {
      key-positions = <17 18>;
      bindings = <&caps_word>;
    };

    delete {
      key-positions = <32 33>;
      bindings = <&kp DEL>;
    };
  };

  behaviors {
    as_ht: autoshift_hold_tap {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      label = "AUTOSHIFT_HOLD_TAP";
      bindings = <&shift>, <&kp>;

      tapping-term-ms = <190>;
    };

    hml: homewrow_mods_left {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      label = "HOMEROW_MODS_LEFT_HAND";
      bindings = <&kp>, <&kp>;

      tapping-term-ms = <200>;
      hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
    };

    hmr: homewrow_mods_right {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      label = "HOMEROW_MODS_RIGHT_HAND";
      bindings = <&kp>, <&kp>;

      tapping-term-ms = <200>;
      hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
    };

    capdance: capdance {
      compatible = "zmk,behavior-tap-dance";
      label = "CAPDANCE";
      #binding-cells = <0>;
      bindings = <&caps_word>, <&kp CAPS>;
    };

    volknob: volume_encoder {
      compatible = "zmk,behavior-sensor-rotate";
      label = "ENCODER_VOLUME_KNOB";
      #sensor-binding-cells = <0>;
      bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;
    };

    rgbknob: rgb_encoder {
      compatible = "zmk,behavior-sensor-rotate-var";
      label = "ENCODER_RGB";
      #sensor-binding-cells = <2>;
      bindings = <&rgb_ug>, <&rgb_ug>;
    };
  };

  conditional_layers {
    compatible = "zmk,conditional-layers";

    tri_layer {
      if-layers = <1 3>;
      then-layer = <3>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
        &kp TAB    &kp Q        &kp W         &kp F         &kp P        &kp B        &kp J    &kp L          &kp U        &kp Y         &kp DOUBLE_QUOTES  &kp BACKSPACE
        &kp LCTRL  &hml LGUI A  &hml LALT R   &hml LCTRL S  &hml LCMD T  &kp G        &kp M    &hmr RCMD N    &hmr RALT E  &hmr RCTRL I  &hmr RSHFT O       &kp APOS
        &kp LSHFT  &kp Z        &kp X         &kp C         &kp D        &kp V        &kp K    &kp M          &kp COMMA    &kp DOT       &kp FSLH           &kp ESC
                                &kp LEFT_ALT  &kp LGUI      &lt 1 SPACE  &kp SPACE    &kp RET  &kp BACKSPACE  &kp RALT     &tog 3
      >;

      sensor-bindings = <&inc_dec_kp UP DOWN>, <&inc_dec_kp RIGHT LEFT>;
    };

    lower {
      bindings = <
        &kp GRAVE  &kp EXCL        &kp AT    &kp HASH  &kp AMPS  &kp PRCNT    &trans           &kp KP_N7        &kp KP_N8        &kp KP_N9        &kp KP_PLUS      &kp KP_MULTIPLY
        &trans     &kp LPAR        &kp RPAR  &kp LBKT  &kp RBKT  &kp PIPE     &trans           &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_N6        &kp KP_SUBTRACT  &kp KP_DIVIDE
        &trans     &kp LEFT_BRACE  &kp RBRC  &trans    &trans    &trans       &trans           &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ENTER     &trans
                                   &trans    &trans    &trans    &trans       &trans           &kp KP_DOT       &kp KP_N0        &kp KP_ENTER
      >;
    };

    raise {
      bindings = <
        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6        &kp F7        &kp F8    &kp F9     &kp F10  &kp F11  &kp F12
        &bt BT_CLR    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N7    &kp N8     &kp N9   &kp N0   &trans
        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_NXT    &kp UP        &trans    &trans     &trans   &trans   &trans
                                    &trans        &trans        &trans        &trans        &kp LEFT      &kp DOWN  &kp RIGHT  &trans
      >;

      sensor-bindings = <&volknob>;
    };

    autoshift {
      bindings = <
        &kp TILDE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR  &trans
        &trans     &as A     &as S   &as D     &as F     &as G        &as H      &as J     &as K      &as L     &trans    &trans
        &trans     &as Z     &as X   &as C     &as V     &as B        &as N      &as M     &trans     &trans    &trans    &trans
                             &trans  &trans    &trans    &trans       &trans     &trans    &trans     &trans
      >;
    };
  };
};
